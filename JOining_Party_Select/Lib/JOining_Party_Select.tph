

ACTION_FOR_EACH Death_var IN

// Original Imoen ~%IMOEN_DV%~ // ~ttimoen~ ~Imoen~  // Imoen
// Original Edwin ~Edwin~                            // Edwin
// Original Jaheira ~Jaheira~ // ~ttjaheir~             // Jaheira
// Original Minsc ~Minsc~ // ~ttminsc~                  // Minsc
// Original Viconia ~Viconia~                        // Viconia
// Original Dorn ~Dorn~                              // Dorn
// Original Neera ~Neera~                            // Neera
// Original Rasaad ~Rasaad~                          // Rasaad

/////////////////////////// bg1 ///////////////////////////

// Original Ajantis ~Ajantis~                          // Ajantis
// Original Alora ~Alora~                              // Alora
// Original Branwen ~Branwen~ // ~ttbran~              // Branwen
// Original Coran ~Coran~                              // Coran
// Original Dynaheir ~Dynaheir~                        // Dynaheir

// Original Eldoth ~Eldoth~                            // Eldoth
// Original Faldorn ~Faldorn~                          // Faldorn
// Original Garrick ~Garrick~                          // Garrick

// Original Kagain ~Kagain~                            // Kagain
// Original Khalid ~Khalid~                            // Khalid
// Original Kivan ~Kivan~                              // Kivan

// Original Montaron ~Montaron~                        // Montaron
// Original Quayle ~Quayle~                            // Quayle
// Original Safana ~Safana~                            // Safana
// Original Sharteel ~Sharteel~ // ~Shar-teel~         // Sharteel
// Original Skie ~Skie~                                // Skie
// Original Tiax ~Tiax~                                // Tiax

// Original Xan ~Xan~ // ttxan~                        // Xan
// Original Xzar ~Xzar~                                // Xzar
// Original Yeslick ~Yeslick~                          // Yeslick

// Original Baeloth ~Baeloth~                          // Baeloth


/////////////////////////// SoD ///////////////////////////


// Original Voghiln ~Voghiln~                         // Voghiln
// Original Corwin ~Corwin~                           // Corwin
// Original Mkhiin ~Mkhiin~                           // Mkhiin
// Original Glint ~Glint~                             // Glint


/////////////////////////// bg2 ///////////////////////////


// Original Aerie ~Aerie~                               // Aerie
// Original Anomen ~Anomen~                             // Anomen
// Original Cernd ~Cernd~                               // Cernd
// Original Haerdalis ~Haerdalis~                       // Haerdalis
// Original Hexxat ~Hexxat~                             // Hexxat
// Original Jan ~Jan~                                   // Jan
// Original Keldorn ~Keldorn~                           // Keldorn
// Original Korgan ~Korgan~                             // Korgan
// Original Mazzy ~Mazzy~                               // Mazzy
// Original Nalia ~Nalia~                               // Nalia
// Original Sarevok ~Sarevok~                           // Sarevok
// Original Valygar ~Valygar~                           // Valygar
// Original Wilson ~Wilson~                             // Wilson
// Original Yoshimo ~Yoshimo~                           // Yoshimo


/////////////////////////// Mods BG1 ///////////////////////////


// Mod Ishlilka ~#Ishy~                                                // Ishlilka_The-Wizard-Slayer


/////////////////////////// Mods BG2 ///////////////////////////

// Alora BG2
// Mod Alora BG2 ~CMALORA~

// Yeslick BG2
// Mod Yeslick BG2 ~LK#YESLK~

// The Undying
// Mod Undying ~cmninaf~ ~callisto~

// Summon Bhaalspawn
// Mod Sandra ~BHAALSPW~

// NikitaRedux
// Mod Nikita ~cmnikita~

// VampireTales
// Mod Miriam ~cmgmiriam~

// Kim
// Mod Kim ~Kim~

// Severian
// Mod Severian ~#Severian~

// Frennedan
// Mod Frennedan ~Frennedan~

BEGIN



//////////////////////////////////////////////////////////////////////////////////////

//                                    BCS                                           //

//////////////////////////////////////////////////////////////////////////////////////



	COPY ~weidu_external/JOining_Party_Select/JOining_Party_BCS~ ~weidu_external/JOining_Party_Select/JOining_Party_BCS~
// !InPartyAllowDead("%Death_var%") /////////////// Global("JO_%Death_var%_NoAllowDead","GLOBAL",1)
			SPRINT textToReplace ~\(^[%TAB% ]*!InPartyAllowDead("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_AllowDead","GLOBAL",0)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : !InPartyAllowDead found in %SOURCE_FILESPEC%
				~
			END
// InPartyAllowDead("%Death_var%") /////////////// Global("JO_%Death_var%_AllowDead","GLOBAL",1)
			SPRINT textToReplace ~\(^[%TAB% ]*InPartyAllowDead("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_AllowDead","GLOBAL",1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : InPartyAllowDead found in %SOURCE_FILESPEC%
				~
			END
// !InParty("%Death_var%") /////////////// Global("JO_%Death_var%_NoInParty","GLOBAL",1)
			SPRINT textToReplace ~\(^[%TAB% ]*!InParty("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_InParty","GLOBAL",0)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... //  %Death_var% : !InParty found in %SOURCE_FILESPEC%
				~
			END
// InParty("%Death_var%") /////////////// Global("JO_%Death_var%_InParty","GLOBAL",1)
			SPRINT textToReplace ~\(^[%TAB% ]*InParty("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_InParty","GLOBAL",1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : InParty found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~  InParty("%Death_var%")~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_InParty","GLOBAL",1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : InParty found in %SOURCE_FILESPEC%
				~
			END
// !Is(!If)ValidForPartyDialog(ue) /////////////// Global("JO_%Death_var%_NoValid","GLOBAL",1)
			SPRINT textToReplace ~\(!IsValidForParty\([^)]*\)("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_Valid","GLOBAL",0)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : !(...)ValidForParty(...) found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~\(!IfValidForParty\([^)]*\)("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_Valid","GLOBAL",0)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : !(...)ValidForParty(...) found in %SOURCE_FILESPEC%
				~
			END
// Is(If)ValidForPartyDialog(ue) /////////////// Global("JO_%Death_var%_Valid","GLOBAL",1)
			SPRINT textToReplace ~\(IsValidForParty\([^)]*\)("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_Valid","GLOBAL",1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : (...)ValidForParty(...) found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~\(IfValidForParty\([^)]*\)("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_Valid","GLOBAL",1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : (...)ValidForParty(...) found in %SOURCE_FILESPEC%
				~
			END
// ApplySpell situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ApplySpell(Myself,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ApplySpell(Myself,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ApplySpell(Myself,\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ApplySpell found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ApplySpell(Player2,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ApplySpell(Player3,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ApplySpell("%Death_var%",\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ApplySpell found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ApplySpell(Player2,\([^)]*\))
^[%TAB% ]*ApplySpell(Player3,\([^)]*\))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ApplySpell("%Death_var%",\1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : NOHOLD_PARTY found in %SOURCE_FILESPEC%
				~
			END
// CreateVisualEffectObject situation
			SPRINT textToReplace ~^[%TAB% ]*CreateVisualEffectObject(\([^)]*\),Player2)
^[%TAB% ]*CreateVisualEffectObject(\([^)]*\),Player3)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 CreateVisualEffectObject(\1,"%Death_var%")~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : CreateVisualEffectObject found in %SOURCE_FILESPEC%
				~
			END
// CreateVisualEffectObject situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,CreateVisualEffectObject(\([^)]*\),Player2))
^[%TAB% ]*ActionOverride(Player3,CreateVisualEffectObject(\([^)]*\),Player3))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",CreateVisualEffectObject(\1,"%Death_var%"))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : CreateVisualEffectObject found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,CreateVisualEffectObject(\([^)]*\),Myself))
^[%TAB% ]*ActionOverride(Player3,CreateVisualEffectObject(\([^)]*\),Myself))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",CreateVisualEffectObject(\1,Myself))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : CreateVisualEffectObject found in %SOURCE_FILESPEC%
				~
			END
// SetSequence situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,SetSequence(\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,SetSequence(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",SetSequence(\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : SetSequence found in %SOURCE_FILESPEC%
				~
			END
// ReallyForceSpell situation
			/*SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ReallyForceSpell(Player2,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ReallyForceSpell(Player3,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ReallyForceSpell("%Death_var%",\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ReallyForceSpell found in %SOURCE_FILESPEC%
				~
			END*/
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ReallyForceSpell(Myself,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ReallyForceSpell(Myself,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ReallyForceSpell(Myself,\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ReallyForceSpell found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(\([^)]*\),ReallyForceSpell(Player2,\([^)]*\)))
^[%TAB% ]*ActionOverride(\([^)]*\),ReallyForceSpell(Player3,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride(\1,ReallyForceSpell("%Death_var%",\2))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ReallyForceSpell found in %SOURCE_FILESPEC%
				~
			END
// ForceSpell situation
			/*SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ForceSpell(Player2,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ForceSpell(Player3,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ForceSpell("%Death_var%",\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ForceSpell found in %SOURCE_FILESPEC%
				~
			END*/
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ForceSpell(Myself,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ForceSpell(Myself,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ForceSpell(Myself,\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ForceSpell found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(\([^)]*\),ForceSpell(Player2,\([^)]*\)))
^[%TAB% ]*ActionOverride(\([^)]*\),ForceSpell(Player3,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride(\1,ForceSpell("%Death_var%",\2))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ForceSpell found in %SOURCE_FILESPEC%
				~
			END
// MakeUnselectable situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,MakeUnselectable(\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,MakeUnselectable(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",MakeUnselectable(\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : MakeUnselectable() found in %SOURCE_FILESPEC%
				~
			END
// PlayDead situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,PlayDead\([^)]*\)(\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,PlayDead\([^)]*\)(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",PlayDead\1(\2))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : PlayDead / PlayDeadInterruptable found in %SOURCE_FILESPEC%
				~
			END
// Face situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player5,Face\([^)]*\)(\([^)]*\)))
^[%TAB% ]*ActionOverride(Player6,Face\([^)]*\)(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",Face\1(\2))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : Face / FaceObject found in %SOURCE_FILESPEC%
				~
			END
// Rest situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,Rest())
^[%TAB% ]*ActionOverride(Player3,Rest())~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",Rest())~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : Rest found in %SOURCE_FILESPEC%
				~
			END
// ClearActions situation
			SPRINT textToReplace ~^[%TAB% ]*ClearActions(Player2)
^[%TAB% ]*ClearActions(Player3)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ClearActions("%Death_var%")~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ClearActions found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ClearActions())
^[%TAB% ]*ActionOverride(Player3,ClearActions())~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ClearActions())~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ClearActions found in %SOURCE_FILESPEC%
				~
			END/*
// AddXPObject situation // WILL PROBABLY BE TOO MUCH WITH THE JO_JOINX.BAF
			SPRINT textToReplace ~^[%TAB% ]*AddXPObject(Player2,\([^)]*\))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 AddXPObject("%Death_var%",\1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : AddXPObject found in %SOURCE_FILESPEC%
				~
			END*/
// Kill situation
			SPRINT textToReplace ~^[%TAB% ]*Kill(Player2)
^[%TAB% ]*Kill(Player3)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 Kill("%Death_var%")~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : Kill found in %SOURCE_FILESPEC%
				~
			END
////////////////// BCS ONLY //////////////////
// !CheckStatGT situation
			SPRINT textToReplace ~^[%TAB% ]*!CheckStatGT(Player2,\0,\([^)]*\))
^[%TAB% ]*!CheckStatGT(Player3,\0,\([^)]*\))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 !CheckStatGT("%Death_var%",0,\1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : !CheckStatGT  found in %SOURCE_FILESPEC%
				~
			END
// FollowObjectFormation situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,FollowObjectFormation(\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,FollowObjectFormation(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",FollowObjectFormation(\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : !CheckStatGT TRUE_SIGHT found in %SOURCE_FILESPEC%
				~
			END
// CreateCreatureObjectCopy situation
			SPRINT textToReplace ~^[%TAB% ]*CreateCreatureObjectCopy(\([^)]*\),Player2,0,0,0)
^[%TAB% ]*CreateCreatureObjectCopy(\([^)]*\),Player3,0,0,0)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 CreateCreatureObjectCopy(\1,"%Death_var%",0,0,0)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : CreateCreatureObjectCopy found in %SOURCE_FILESPEC%
				~
			END
// ApplySpellRES situation
			SPRINT textToReplace ~^[%TAB% ]*ApplySpellRES(\([^)]*\),Player2)
^[%TAB% ]*ApplySpellRES(\([^)]*\),Player3)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ApplySpellRES(\1,"%Death_var%")~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ApplySpellRES found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ApplySpellRES(\([^)]*\),Myself))
^[%TAB% ]*ActionOverride(Player3,ApplySpellRES(\([^)]*\),Myself))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ApplySpellRES(\1,Myself))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ApplySpellRES found in %SOURCE_FILESPEC%
				~
			END/*
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ApplySpellRES(\([^)]*\),Player2))
^[%TAB% ]*ActionOverride(Player3,ApplySpellRES(\([^)]*\),Player3))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ApplySpellRES(\1,"%Death_var%"))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ApplySpellRES found in %SOURCE_FILESPEC%
				~
			END*/
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(\([^)]*\),ApplySpellRES(\([^)]*\),Player2))
^[%TAB% ]*ActionOverride(\([^)]*\),ApplySpellRES(\([^)]*\),Player3))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride(\1,ApplySpellRES(\2,"%Death_var%"))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ApplySpellRES found in %SOURCE_FILESPEC%
				~
			END
// ReallyForceSpellRES situation
			SPRINT textToReplace ~^[%TAB% ]*ReallyForceSpellRES(\([^)]*\),Player2)
^[%TAB% ]*ReallyForceSpellRES(\([^)]*\),Player3)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ReallyForceSpellRES(\1,"%Death_var%")~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ReallyForceSpellRES found in %SOURCE_FILESPEC%
				~
			END/*
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ReallyForceSpellRES(\([^)]*\),Player2))
^[%TAB% ]*ActionOverride(Player3,ReallyForceSpellRES(\([^)]*\),Player3))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ReallyForceSpellRES(\1,"%Death_var%"))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ReallyForceSpellRES found in %SOURCE_FILESPEC%
				~
			END*/
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ReallyForceSpellRES(\([^)]*\),Myself))
^[%TAB% ]*ActionOverride(Player3,ReallyForceSpellRES(\([^)]*\),Myself))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ReallyForceSpellRES(\1,Myself))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ReallyForceSpellRES found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(\([^)]*\),ReallyForceSpellRES(\([^)]*\),Player2))
^[%TAB% ]*ActionOverride(\([^)]*\),ReallyForceSpellRES(\([^)]*\),Player3))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride(\1,ReallyForceSpellRES(\2,"%Death_var%"))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ReallyForceSpellRES found in %SOURCE_FILESPEC%
				~
			END/*ELSE BEGIN
				PATCH_WARN ~WARNING: could not find %Death_var% in %SOURCE_FILESPEC%~
			END*/
BUT_ONLY




//////////////////////////////////////////////////////////////////////////////////////

//                                    DLG                                           //

//////////////////////////////////////////////////////////////////////////////////////




	COPY ~weidu_external/JOining_Party_Select/JOining_Party_DLG~ ~weidu_external/JOining_Party_Select/JOining_Party_DLG~
// !InPartyAllowDead("%Death_var%") /////////////// Global("JO_%Death_var%_NoAllowDead","GLOBAL",1)
			SPRINT textToReplace ~\(^[%TAB% ]*!InPartyAllowDead("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_AllowDead","GLOBAL",0)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : !InPartyAllowDead found in %SOURCE_FILESPEC%
				~
			END
// InPartyAllowDead("%Death_var%") /////////////// Global("JO_%Death_var%_AllowDead","GLOBAL",1)
			SPRINT textToReplace ~\(^[%TAB% ]*InPartyAllowDead("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_AllowDead","GLOBAL",1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : InPartyAllowDead found in %SOURCE_FILESPEC%
				~
			END
// !InParty("%Death_var%") /////////////// Global("JO_%Death_var%_NoInParty","GLOBAL",1)
			SPRINT textToReplace ~\(^[%TAB% ]*!InParty("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_InParty","GLOBAL",0)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... //  %Death_var% : !InParty found in %SOURCE_FILESPEC%
				~
			END
// InParty("%Death_var%") /////////////// Global("JO_%Death_var%_InParty","GLOBAL",1)
			SPRINT textToReplace ~\(^[%TAB% ]*InParty("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_InParty","GLOBAL",1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : InParty found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~  InParty("%Death_var%")~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_InParty","GLOBAL",1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : InParty found in %SOURCE_FILESPEC%
				~
			END
// !Is(!If)ValidForPartyDialog(ue) /////////////// Global("JO_%Death_var%_NoValid","GLOBAL",1)
			SPRINT textToReplace ~\(!IsValidForParty\([^)]*\)("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_Valid","GLOBAL",0)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : !(...)ValidForParty(...) found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~\(!IfValidForParty\([^)]*\)("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_Valid","GLOBAL",0)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : !(...)ValidForParty(...) found in %SOURCE_FILESPEC%
				~
			END
// Is(If)ValidForPartyDialog(ue) /////////////// Global("JO_%Death_var%_Valid","GLOBAL",1)
			SPRINT textToReplace ~\(IsValidForParty\([^)]*\)("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_Valid","GLOBAL",1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : (...)ValidForParty(...) found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~\(IfValidForParty\([^)]*\)("%Death_var%")\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~Global("JO_%Death_var%_Valid","GLOBAL",1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : (...)ValidForParty(...) found in %SOURCE_FILESPEC%
				~
			END
// ApplySpell situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ApplySpell(Myself,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ApplySpell(Myself,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ApplySpell(Myself,\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ApplySpell found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ApplySpell(Player2,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ApplySpell(Player3,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ApplySpell("%Death_var%",\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ApplySpell found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ApplySpell(Player2,\([^)]*\))
^[%TAB% ]*ApplySpell(Player3,\([^)]*\))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ApplySpell("%Death_var%",\1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ApplySpell found in %SOURCE_FILESPEC%
				~
			END
// CreateVisualEffectObject situation
			SPRINT textToReplace ~^[%TAB% ]*CreateVisualEffectObject(\([^)]*\),Player2)
^[%TAB% ]*CreateVisualEffectObject(\([^)]*\),Player3)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 CreateVisualEffectObject(\1,"%Death_var%")~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : CreateVisualEffectObject found in %SOURCE_FILESPEC%
				~
			END
// CreateVisualEffectObject situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,CreateVisualEffectObject(\([^)]*\),Player2))
^[%TAB% ]*ActionOverride(Player3,CreateVisualEffectObject(\([^)]*\),Player3))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",CreateVisualEffectObject(\1,"%Death_var%"))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : CreateVisualEffectObject found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,CreateVisualEffectObject(\([^)]*\),Myself))
^[%TAB% ]*ActionOverride(Player3,CreateVisualEffectObject(\([^)]*\),Myself))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",CreateVisualEffectObject(\1,Myself))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : CreateVisualEffectObject found in %SOURCE_FILESPEC%
				~
			END
// SetSequence situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,SetSequence(\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,SetSequence(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",SetSequence(\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : SetSequence found in %SOURCE_FILESPEC%
				~
			END
// ReallyForceSpell situation
			/*SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ReallyForceSpell(Player2,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ReallyForceSpell(Player3,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ReallyForceSpell("%Death_var%",\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ReallyForceSpell found in %SOURCE_FILESPEC%
				~
			END*/
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ReallyForceSpell(Myself,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ReallyForceSpell(Myself,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ReallyForceSpell(Myself,\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ReallyForceSpell found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(\([^)]*\),ReallyForceSpell(Player2,\([^)]*\)))
^[%TAB% ]*ActionOverride(\([^)]*\),ReallyForceSpell(Player3,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride(\1,ReallyForceSpell("%Death_var%",\2))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : MIND_CRIPPLE found in %SOURCE_FILESPEC%
				~
			END
// ForceSpell situation
			/*SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ForceSpell(Player2,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ReallyForceSpell(Player3,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ForceSpell("%Death_var%",\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ForceSpell found in %SOURCE_FILESPEC%
				~
			END*/
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ForceSpell(Myself,\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,ForceSpell(Myself,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ForceSpell(Myself,\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ForceSpell found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(\([^)]*\),ForceSpell(Player2,\([^)]*\)))
^[%TAB% ]*ActionOverride(\([^)]*\),ForceSpell(Player3,\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride(\1,ForceSpell("%Death_var%",\2))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ForceSpell found in %SOURCE_FILESPEC%
				~
			END
// MakeUnselectable situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,MakeUnselectable(\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,MakeUnselectable(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",MakeUnselectable(\1))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : MakeUnselectable() found in %SOURCE_FILESPEC%
				~
			END
// PlayDead situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,PlayDead\([^)]*\)(\([^)]*\)))
^[%TAB% ]*ActionOverride(Player3,PlayDead\([^)]*\)(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",PlayDead\1(\2))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : PlayDead / PlayDeadInterruptable found in %SOURCE_FILESPEC%
				~
			END
// Face situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player5,Face\([^)]*\)(\([^)]*\)))
^[%TAB% ]*ActionOverride(Player6,Face\([^)]*\)(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",Face\1(\2))~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : Face / FaceObject found in %SOURCE_FILESPEC%
				~
			END
// Rest situation
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,Rest())
^[%TAB% ]*ActionOverride(Player3,Rest())~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",Rest())~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : Rest found in %SOURCE_FILESPEC%
				~
			END
// ClearActions situation
			SPRINT textToReplace ~^[%TAB% ]*ClearActions(Player2)
^[%TAB% ]*ClearActions(Player3)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ClearActions("%Death_var%")~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ClearActions found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(Player2,ClearActions())
^[%TAB% ]*ActionOverride(Player3,ClearActions())~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 ActionOverride("%Death_var%",ClearActions())~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : ClearActions found in %SOURCE_FILESPEC%
				~
			END/*
// AddXPObject situation // WILL PROBABLY BE TOO MUCH WITH THE JO_JOINX.BAF
			SPRINT textToReplace ~^[%TAB% ]*AddXPObject(Player2,\([^)]*\))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 AddXPObject("%Death_var%",\1)~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : AddXPObject found in %SOURCE_FILESPEC%
				~
			END*/
// Kill situation
			SPRINT textToReplace ~^[%TAB% ]*Kill(Player2)
^[%TAB% ]*Kill(Player3)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~\0 Kill("%Death_var%")~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // %Death_var% : Kill found in %SOURCE_FILESPEC%
				~
			END
BUT_ONLY

//

COPY ~JOining_Party_Select/Baf/All_In.baf~ ~weidu_external/JOining_Party_Select/All_In/%Death_var%_All_In.baf~ EVALUATE_BUFFER

//



END




/////////////////////////// Original BG ///////////////////////////




ACTION_FOR_EACH Death_var IN

/////////////////////////// bg1 ///////////////////////////

// Original Ajantis ~Ajantis~                          // Ajantis
// Original Alora ~Alora~                              // Alora
// Original Branwen ~Branwen~ // ~ttbran~              // Branwen
// Original Coran ~Coran~                              // Coran
// Original Dynaheir ~Dynaheir~                        // Dynaheir

// Original Eldoth ~Eldoth~                            // Eldoth
// Original Faldorn ~Faldorn~                          // Faldorn
// Original Garrick ~Garrick~                          // Garrick

// Original Kagain ~Kagain~                            // Kagain
// Original Khalid ~Khalid~                            // Khalid
// Original Kivan ~Kivan~                              // Kivan

// Original Montaron ~Montaron~                        // Montaron
// Original Quayle ~Quayle~                            // Quayle
// Original Safana ~Safana~                            // Safana
// Original Sharteel ~Sharteel~ // ~Shar-teel~         // Sharteel
// Original Skie ~Skie~                                // Skie
// Original Tiax ~Tiax~                                // Tiax

// Original Xan ~Xan~ // ~ttxan~                       // Xan
// Original Xzar ~Xzar~                                // Xzar
// Original Yeslick ~Yeslick~                          // Yeslick

// Original Baeloth ~Baeloth~                          // Baeloth


/////////////////////////// SoD ///////////////////////////


// Original Voghiln ~Voghiln~                         // Voghiln
// Original Corwin ~Corwin~                           // Corwin
// Original Mkhiin ~Mkhiin~                           // Mkhiin
// Original Glint ~Glint~                             // Glint


/////////////////////////// bg2 ///////////////////////////


// Original Aerie ~Aerie~                               // Aerie
// Original Anomen ~Anomen~                             // Anomen
// Original Cernd ~Cernd~                               // Cernd
// Original Haerdalis ~Haerdalis~                       // Haerdalis
// Original Hexxat ~Hexxat~                             // Hexxat
// Original Jan ~Jan~                                   // Jan
// Original Keldorn ~Keldorn~                           // Keldorn
// Original Korgan ~Korgan~                             // Korgan
// Original Mazzy ~Mazzy~                               // Mazzy
// Original Nalia ~Nalia~                               // Nalia
// Original Sarevok ~Sarevok~                           // Sarevok
// Original Valygar ~Valygar~                           // Valygar
// Original Wilson ~Wilson~                             // Wilson
// Original Yoshimo ~Yoshimo~                           // Yoshimo


BEGIN

COPY ~weidu_external/JOining_Party_Select/All_In/%Death_var%_All_In.baf~ ~weidu_external/JOining_Party_Select/All_In/%Death_var%_All_In.baf~
			REPLACE_TEXTUALLY ~// JO_JOIN.BAF~ ~~
				PATCH_PRINT ~... // %Death_var% : // JO_JOIN.BAF activated in %SOURCE_FILESPEC%
				~

END

//////////////////////////////////////////////////////////////////
// Global("JO_JOIN_CUTSCENE", "GLOBAL", 0) 

	COPY ~weidu_external/JOining_Party_Select/JOining_Party_BCS~ ~weidu_external/JOining_Party_Select/JOining_Party_BCS~
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(\([^)]*\),EndCutSceneMode())~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~SetGlobal("JO_JOIN_CUTSCENE","GLOBAL",0)
	\0~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // EndCutSceneMode() SPECIAL found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~\(^[%TAB% ]*EndCutSceneMode()\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~SetGlobal("JO_JOIN_CUTSCENE","GLOBAL",0)
	EndCutSceneMode()~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // EndCutSceneMode() found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(\([^)]*\),StartDialog\([^)]*\)(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~SetGlobal("JO_JOIN_CUTSCENE","GLOBAL",0) \0 ~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // ActionOverride StartDialog() found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(\([^)]*\),PlayerDialog\([^)]*\)(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~SetGlobal("JO_JOIN_CUTSCENE","GLOBAL",0) \0 ~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // ActionOverride PlayerDialog() found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(\([^)]*\),Dialog\([^)]*\)(\([^)]*\)))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~SetGlobal("JO_JOIN_CUTSCENE","GLOBAL",0) \0 ~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // ActionOverride Dialog() found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*StartDialog\([^)]*\)(\([^)]*\))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~SetGlobal("JO_JOIN_CUTSCENE","GLOBAL",0) \0 ~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // StartDialog() found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*PlayerDialog\([^)]*\)(\([^)]*\))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~SetGlobal("JO_JOIN_CUTSCENE","GLOBAL",0) \0 ~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // PlayerDialog() found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~^[%TAB% ]*Dialog\([^)]*\)(\([^)]*\))~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~SetGlobal("JO_JOIN_CUTSCENE","GLOBAL",0) \0 ~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // Dialog() found in %SOURCE_FILESPEC%
				~
			END
BUT_ONLY


	COPY ~weidu_external/JOining_Party_Select/JOining_Party_DLG~ ~weidu_external/JOining_Party_Select/JOining_Party_DLG~
			SPRINT textToReplace ~^[%TAB% ]*ActionOverride(\([^)]*\),EndCutSceneMode())~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~SetGlobal("JO_JOIN_CUTSCENE","GLOBAL",0)
	\0~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // EndCutSceneMode() SPECIAL found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~\(^[%TAB% ]*StartCutSceneMode()\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~SetGlobal("JO_JOIN_CUTSCENE","GLOBAL",1)
	StartCutSceneMode()~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // StartCutSceneMode() found in %SOURCE_FILESPEC%
				~
			END
			SPRINT textToReplace ~\(^[%TAB% ]*EndCutSceneMode()\)~
			COUNT_REGEXP_INSTANCES ~%textToReplace%~ num_matches
			PATCH_IF (num_matches > 0) BEGIN
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%textToReplace%~ ~SetGlobal("JO_JOIN_CUTSCENE","GLOBAL",0)
	EndCutSceneMode()~
				PATCH_PRINT ~Patching: %num_matches% matches found in %SOURCE_FILESPEC% for REPLACE_TEXTUALLY: %textToReplace%~
				PATCH_PRINT ~... // EndCutSceneMode() found in %SOURCE_FILESPEC%
				~
			END
BUT_ONLY














	
/*
CreateVisualEffectObject("SPPROIMG",Player2)
CreateCreatureObjectCopy("jclone01",Player2,0,0,0)
MoveToObject(Player2)
PolymorphCopy(Player2)
ReallyForceSpell(Player2,CLERIC_CALL_LIGHTNING)
ActionOverride(Player2,Face(SSE))
AddXPObject(Player2,45000)
ActionOverride(Player2,ReallyForceSpell(Myself,CLERIC_LESSER_RESTORATION))
CreateVisualEffectObject("SPCLOUD1",Player2)
ActionOverride(Player2,CreateVisualEffectObject("SPCLOUD1",Myself))
FakeEffectExpiryCheck(Player2,150000)
CreateVisualEffectObject("SPSTRENH",Player2)
ActionOverride(Player2,DropItem("SW1H56",[-1.-1]))
ActionOverride(Player2,ApplySpell(Myself,UNDER_NORM))
*/
